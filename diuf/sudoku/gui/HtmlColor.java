/*
 * Project: Sudoku Explainer
 * Copyright (C) 2006-2007 Nicolas Juillerat
 * Copyright (C) 2013-2021 Keith Corlett
 * Available under the terms of the Lesser General Public License (LGPL)
 */
package diuf.sudoku.gui;

import java.awt.Color;

/**
 * This form converts between java's RGB colors and HTML formatted colors. It's
 * not much use now because Netbeans color editor has a HTML tab, which is far
 * more advanced, but doing this is a nice way to explore JDK17's Swing frame
 * editor, so I'm writing it anyway, just for fun.
 *
 * @author Keith Corlett 2022-01-08
 */
public final class HtmlColor extends javax.swing.JFrame {

	private static final long serialVersionUID = 2754990001L;

	private static int beep() {
		java.awt.Toolkit.getDefaultToolkit().beep();
		return 0;
	}

	private static String dec(final int i) {
		return Integer.toString(i);
	}
	private static int parseDec(final String s) {
		try {
			return Integer.parseInt(s); // base 10 is the default
		} catch(NumberFormatException ex) {
			return beep();
		}
	}

	private static String hex(final int i) {
		String s = Integer.toString(i, 16);
		while ( s.length() < 2 )
			s = "0"+s;
		return s.toUpperCase(); // "#FFFFFF" is easier to read than "#ffffff"
	}
	private static int parseHex(final String s) {
		try {
			return Integer.parseInt(s, 16); // hexadecimal
		} catch (NumberFormatException ex) {
			return beep();
		}
	}

	private static String htmlColor(final int r, final int g, final int b) {
		return "#"+hex(r)+hex(g)+hex(b);
	}

	private final int h, w; // height and width of pnlColor

	/**
	 * Creates new form HtmlColor
	 */
	public HtmlColor() {
		initComponents();
		h = pnlColor.getHeight();
		w = pnlColor.getWidth();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings({"unchecked", "deprecation"})
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblRed = new javax.swing.JLabel();
        txtRed = new javax.swing.JTextField();
        lblGreen = new javax.swing.JLabel();
        txtGreen = new javax.swing.JTextField();
        lblBlue = new javax.swing.JLabel();
        txtBlue = new javax.swing.JTextField();
        lblHtml = new javax.swing.JLabel();
        txtHtml = new javax.swing.JTextField();
        btnClose = new javax.swing.JButton();
        pnlColor = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("HTML Colors");

        lblRed.setText("Red"); // NOI18N

        txtRed.setText("255");
        txtRed.setName("txtRed"); // NOI18N
        txtRed.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtRedFocusLost(evt);
            }
        });

        lblGreen.setText("Green");

        txtGreen.setText("255");
        txtGreen.setName("txtGreen"); // NOI18N
        txtGreen.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtGreenFocusLost(evt);
            }
        });

        lblBlue.setText("Blue");

        txtBlue.setText("255");
        txtBlue.setName("txtBlue"); // NOI18N
        txtBlue.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtBlueFocusLost(evt);
            }
        });

        lblHtml.setText("HTML");

        txtHtml.setText("#AAAAAA");
        txtHtml.setName("txtHtml"); // NOI18N
        txtHtml.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtHtmlFocusLost(evt);
            }
        });

        btnClose.setLabel("Close");
        btnClose.setName("btnClose"); // NOI18N
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        pnlColor.setBackground(new java.awt.Color(204, 255, 255));
        pnlColor.setBorder(javax.swing.BorderFactory.createTitledBorder("color"));
        pnlColor.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                pnlColorMouseMoved(evt);
            }
        });

        javax.swing.GroupLayout pnlColorLayout = new javax.swing.GroupLayout(pnlColor);
        pnlColor.setLayout(pnlColorLayout);
        pnlColorLayout.setHorizontalGroup(
            pnlColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        pnlColorLayout.setVerticalGroup(
            pnlColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblRed, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtRed))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblGreen, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtGreen))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblBlue, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtBlue))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblHtml, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtHtml, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnClose)
                        .addGap(0, 167, Short.MAX_VALUE))
                    .addComponent(pnlColor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtRed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblRed))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblGreen)
                            .addComponent(txtGreen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblBlue)
                            .addComponent(txtBlue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblHtml)
                            .addComponent(txtHtml, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(pnlColor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(btnClose)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtRedFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtRedFocusLost
        updateHtml();
    }//GEN-LAST:event_txtRedFocusLost

    private void txtGreenFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtGreenFocusLost
        updateHtml();
    }//GEN-LAST:event_txtGreenFocusLost

    private void txtBlueFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBlueFocusLost
        updateHtml();
    }//GEN-LAST:event_txtBlueFocusLost

    private void txtHtmlFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtHtmlFocusLost
        updateRGB(txtHtml.getText());
    }//GEN-LAST:event_txtHtmlFocusLost

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        dispose();
    }//GEN-LAST:event_btnCloseActionPerformed

    private void pnlColorMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlColorMouseMoved
        updateFromPanel(evt.getX(), evt.getY());
    }//GEN-LAST:event_pnlColorMouseMoved

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(HtmlColor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(HtmlColor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(HtmlColor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(HtmlColor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new HtmlColor().setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JLabel lblBlue;
    private javax.swing.JLabel lblGreen;
    private javax.swing.JLabel lblHtml;
    private javax.swing.JLabel lblRed;
    private javax.swing.JPanel pnlColor;
    private javax.swing.JTextField txtBlue;
    private javax.swing.JTextField txtGreen;
    private javax.swing.JTextField txtHtml;
    private javax.swing.JTextField txtRed;
    // End of variables declaration//GEN-END:variables

	private void updateHtml() {
		int r = parseDec(txtRed.getText());
		int g = parseDec(txtGreen.getText());
		int b = parseDec(txtBlue.getText());
		txtHtml.setText(htmlColor(r, g, b));
		pnlColor.setBackground(new Color(r, g, b));
	}

	private void updateRGB(final String s) {
		int r=0, g=0, b=0;
		if ( s != null ) {
			final String m = s.length()==6 && s.charAt(0)!='#' ? "#"+s : s;
			if ( (m.length()==7 && m.charAt(0)=='#') ) {
				r = parseHex(m.substring(1,3));
				g = parseHex(m.substring(3,5));
				b = parseHex(m.substring(5,7));
			} else beep();
		} else beep();
		txtRed.setText(dec(r));
		txtGreen.setText(dec(g));
		txtBlue.setText(dec(b));
		pnlColor.setBackground(new Color(r, g, b));
	}

	// Use the mouse to set r,g,b in pnlColor, then
	// press the TAB key to update the HTML text.
	// WARN: This approach cannot produce colors high in both Green & Blue.
	private void updateFromPanel(final int x, final int y) {
		final int r = 255 * y / h;
		final int g = 255 * x / w;
		final int b = 255 - g;
		txtRed.setText(dec(r));
		txtGreen.setText(dec(g));
		txtBlue.setText(dec(b));
		pnlColor.setBackground(new Color(r, g, b));
	}

}
