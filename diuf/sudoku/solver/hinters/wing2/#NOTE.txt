The code in the wing2 package was boosted from Sukaku by Nicolas Juillerat.
It's called wing2 because all these solving techniques are large wings,
and/or limited ALS-XZ's (with extra elims detected for double-linked hints)
and/or simplified forcing chains, depending on how you look at things.

Sukaku is a redo of Sudoku Explainer by its original author;
plus WXYZWing, UVWXYZWing, and TUVWXYZWing boosted from SudokuMonster;
plus support for Sudoku variants.

Sukaku is published under the GNU LGPL Version 2.1 licence, so it's OK to
boost it's code, especially to boost it back into another variant of the
original, like this.

I do not know the licence conditions of SudokuMonster, but as Nicholas boosted
it, I guess it's OK for me to do likewise, because I assume that it must have
been open source for Nicholas to get the code. Nobody open-sources code gotten
with a decompiler. That'd be stupid. And wrong. And illegal.

KRC 2020-01-04 16:41 I've just fitted all three "big wings" up with the elim
method, to do the actual eliminations, because it's MUCH shorter (less boiler
plate code), and also a tiny bit faster.

KRC 2021-01-21 I should note that wing2 is the first, but not the only place
that uses BitIdx. It has to be in the grid, obviously, to get the bastards,
from whence it has spread to (currently) Idx (translate); als.DeathBlossom,
and lock2.LockingGeneralised. I am attempting to minimise it's usage because
each instance holds the whole grid, so it must be cleaned-up after use.


NOTE: TUVWXYZWing is actually slower than ALS-XZ per elimination. It's been
retained only coz it finds a few hints which ALS-XZ does not, thanks to its
ability to detect additional eliminations on double-links, I think.

NOTE: Sukaku has a few other solving techniques which I have thus far ignored,
coz (like HoDoKu's Sue De Coq) I don't understand them AT ALL, so I'm loath to
even attempt to re-implement them on Sudoku Explainers model. These include
* TurbotFish: covers Skyscraper, Two-String Kite (I already have both) and
  TurbotFish which is JUST special case (4 cell only) X-Chaining, IIRC.
  TurbotFish detection was removed from UnaryChainer coz counting cells and
  renaming the hints is/was a pointless pain in the arse! It's JUST an X-Chain!
  Note that my perception of this situation MAY be totally bogus! Or not. One
  thing software engineering teaches you is that opinions are like assholes in
  that everybody has one, but some assholes come together to form a choir,
  whilst others just fart randomly, out of tune, and struggle. I'm an out-tuned
  sort of bloke who generally struggles, so please ignore ALL of my opinions.
  But then again my s__t is pretty fast. Go figure.
* forcingCellFNC, forcingCellNC, lockedFNC, lockedNC where NC stands for
  NonConsecutive, I think: appear to implement "extra constraints" of which I
  am NOT a fan. All sorts of additional constraints CAN be added to Sudoku but
  NONE of them make the puzzle HARDER, so let's just respect the insane level
  of intelligence required to come-up with the original, and not ____ with it!

